{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","root","background","display","borderRadius","expand","transform","marginTop","marginLeft","transition","transitions","create","duration","short","expandOpen","avatar","backgroundColor","Organization","_ref","org","onCollapse","collapsed","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","handleClose","_useDrop","useDrop","accept","drop","name","tradingName","collect","monitor","isOver","canDrop","_useDrop2","_useDrop2$","react_default","a","createElement","Card","variant","className","ref","style","CardHeader","Tooltip","title","concat","_","size","organizationChildRelationship","account","arrow","Badge","cursor","color","anchorOrigin","vertical","horizontal","showZero","invisible","overlap","badgeContent","onClick","Avatar","Business_default","action","IconButton","event","currentTarget","MoreVert_default","Menu","open","Boolean","onClose","MenuItem","ListItemIcon","ListItemText","primary","AccountBalance_default","clsx","defineProperty","ExpandMore_default","Account","_ref2","_useDrag","useDrag","item","type","end","dropResult","getDropResult","alert","isDragging","_useDrag2","drag","opacity","Node","_ref4","o","parent","_React$useState3","_React$useState4","setCollapsed","handleCollapse","useEffect","T","TreeNode","props","index_module","assign","lineWidth","lineColor","lineBorderRadius","children","label","map","c","createMuiTheme","palette","fontFamily","App","ThemeProvider","Box","padding","DndProvider","backend","HTML5Backend","organization","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b0ce3ad6.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Tree, TreeNode } from \"react-organizational-chart\";\nimport _ from \"lodash\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport organization from \"./org.json\";\n\nimport {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"white\",\n    display: \"inline-block\",\n    borderRadius: 16\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginTop: -10,\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.short\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: \"#ECECF4\"\n  }\n}));\n\nfunction Organization({ org, onCollapse, collapsed }) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: \"account\",\n    drop: () => ({ name: org.tradingName }),\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  const isActive = canDrop && isOver;\n  let backgroundColor = \"white\";\n  if (isActive) {\n    backgroundColor = \"#ddffd2\";\n  } else if (canDrop) {\n    backgroundColor = \"#ffeedc\";\n  }\n  return (\n    <Card\n      variant=\"outlined\"\n      className={classes.root}\n      ref={drop}\n      style={{ backgroundColor }}\n    >\n      <CardHeader\n        avatar={\n          <Tooltip\n            title={`${_.size(\n              org.organizationChildRelationship\n            )} Sub Profile, ${_.size(org.account)} Sub Account`}\n            arrow\n          >\n            <Badge\n              style={{ cursor: \"pointer\" }}\n              color=\"secondary\"\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\"\n              }}\n              showZero\n              invisible={!collapsed}\n              overlap=\"circle\"\n              badgeContent={_.size(org.organizationChildRelationship)}\n              onClick={onCollapse}\n            >\n              <Avatar className={classes.avatar}>\n                <BusinessIcon color=\"primary\" />\n              </Avatar>\n            </Badge>\n          </Tooltip>\n        }\n        title={org.tradingName}\n        action={\n          <IconButton size=\"small\" onClick={handleClick}>\n            <MoreVertIcon />\n          </IconButton>\n        }\n      />\n\n      <Menu open={Boolean(anchorEl)} anchorEl={anchorEl} onClose={handleClose}>\n        <MenuItem onClick={handleClose}>\n          <ListItemIcon>\n            <BusinessIcon color=\"primary\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Add Sub Profile\" />\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n          <ListItemIcon>\n            <AccountBalanceIcon color=\"secondary\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Add Sub Account\" />\n        </MenuItem>\n      </Menu>\n      <IconButton\n        size=\"small\"\n        onClick={onCollapse}\n        className={clsx(classes.expand, {\n          [classes.expandOpen]: !collapsed\n        })}\n      >\n        <ExpandMoreIcon />\n      </IconButton>\n    </Card>\n  );\n}\nfunction Account({ a }) {\n  const classes = useStyles();\n  const [{ isDragging }, drag] = useDrag({\n    item: { name: a.name, type: \"account\" },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n      if (item && dropResult) {\n        alert(`You moved ${item.name} to ${dropResult.name}`);\n      }\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0.4 : 1;\n  return (\n    <Card\n      variant=\"outlined\"\n      className={classes.root}\n      ref={drag}\n      style={{ cursor: \"pointer\", opacity }}\n    >\n      <CardHeader\n        avatar={\n          <Avatar className={classes.avatar}>\n            <AccountBalanceIcon color=\"secondary\" />\n          </Avatar>\n        }\n        title={a.name}\n      />\n    </Card>\n  );\n}\nfunction Product({ p }) {\n  const classes = useStyles();\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <CardContent>\n        <Typography variant=\"subtitle2\">{p.name}</Typography>\n      </CardContent>\n    </Card>\n  );\n}\nfunction Node({ o, parent }) {\n  const [collapsed, setCollapsed] = React.useState(o.collapsed);\n  const handleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n  React.useEffect(() => {\n    o.collapsed = collapsed;\n  });\n  const T = parent\n    ? TreeNode\n    : (props) => (\n        <Tree\n          {...props}\n          lineWidth={\"2px\"}\n          lineColor={\"#bbc\"}\n          lineBorderRadius={\"12px\"}\n        >\n          {props.children}\n        </Tree>\n      );\n  return collapsed ? (\n    <T\n      label={\n        <Organization\n          org={o}\n          onCollapse={handleCollapse}\n          collapsed={collapsed}\n        />\n      }\n    />\n  ) : (\n    <T\n      label={\n        <Organization\n          org={o}\n          onCollapse={handleCollapse}\n          collapsed={collapsed}\n        />\n      }\n    >\n      {_.map(o.account, (a) => (\n        <TreeNode label={<Account a={a} />}></TreeNode>\n      ))}\n      {_.map(o.organizationChildRelationship, (c) => (\n        <Node o={c} parent={o} />\n      ))}\n    </T>\n  );\n}\nconst theme = createMuiTheme({\n  palette: {\n    background: \"#ECECF4\"\n  },\n  fontFamily: \"Roboto, sans-serif\"\n});\n\nexport default function App(props) {\n  return (\n    <ThemeProvider theme={theme}>\n      <Box padding={4}>\n        <DndProvider backend={HTML5Backend}>\n          <Node o={organization} />\n        </DndProvider>\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}